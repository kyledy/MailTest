"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.X509CertificateCredentials = void 0;
const WSSecurityBasedCredentials_1 = require("./WSSecurityBasedCredentials");
class X509CertificateCredentials extends WSSecurityBasedCredentials_1.WSSecurityBasedCredentials {
    AdjustUrl(url) { throw new Error("X509CertificateCredentials.ts - AdjustUrl : Not implemented."); }
    //PrepareWebRequest(request: IEwsHttpWebRequest): any { throw new Error("X509CertificateCredentials.ts - PrepareWebRequest : Not implemented.");}
    Sign(memoryStream) { throw new Error("X509CertificateCredentials.ts - Sign : Not implemented."); }
    ToString() { throw new Error("X509CertificateCredentials.ts - ToString : Not implemented."); }
}
exports.X509CertificateCredentials = X509CertificateCredentials;
X509CertificateCredentials.BinarySecurityTokenFormat = "<wsse:BinarySecurityToken EncodingType='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary' ValueType='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3' wsu:Id='{0}'>{1}</wsse:BinarySecurityToken>";
X509CertificateCredentials.KeyInfoClauseFormat = "<wsse:SecurityTokenReference xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd' ><wsse:Reference URI='#{0}' ValueType='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3' /></wsse:SecurityTokenReference>";
X509CertificateCredentials.WsSecurityX509CertPathSuffix = "/wssecurity/x509cert";
//# sourceMappingURL=X509CertificateCredentials.js.map